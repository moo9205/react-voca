{"ast":null,"code":"var _jsxFileName = \"/home/moo/Desktop/practice/voca/src/component/Day.js\";\nimport dummy from \"../db/data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Day() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: dummy.words.map(word => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: word.eng\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: word.kor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = Day;\n\nvar _c;\n\n$RefreshReg$(_c, \"Day\");","map":{"version":3,"sources":["/home/moo/Desktop/practice/voca/src/component/Day.js"],"names":["dummy","Day","words","map","word","eng","kor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,iBAAlB;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,sBACE;AAAA,2BACE;AAAA,6BACE;AAAA,kBACGD,KAAK,CAACE,KAAN,CAAYC,GAAZ,CAAiBC,IAAD,iBACf;AAAA,kCACE;AAAA,sBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAcD;KAfuBL,G","sourcesContent":["import dummy from \"../db/data.json\";\n\nexport default function Day() {\n  return (\n    <>\n      <table>\n        <tbody>\n          {dummy.words.map((word) => (\n            <tr>\n              <td>{word.eng}</td>\n              <td>{word.kor}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}