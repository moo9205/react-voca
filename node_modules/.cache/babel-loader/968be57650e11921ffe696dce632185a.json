{"ast":null,"code":"var _jsxFileName = \"/home/moo/Desktop/practice/voca/src/component/Day.js\",\n    _s = $RefreshSig$();\n\nimport dummy from \"../db/data.json\";\nimport { useParams } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Day() {\n  _s();\n\n  const day = useParams().day;\n  const wordList = dummy.words.filter(word => word.day === day);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Day \", day]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: wordList.map(word => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: word.eng\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: word.kor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this)]\n        }, word.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Day, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n  return [useParams];\n});\n\n_c = Day;\n\nvar _c;\n\n$RefreshReg$(_c, \"Day\");","map":{"version":3,"sources":["/home/moo/Desktop/practice/voca/src/component/Day.js"],"names":["dummy","useParams","Day","day","wordList","words","filter","word","map","eng","kor","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,iBAAlB;AACA,SAASC,SAAT,QAA0B,cAA1B;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAMC,GAAG,GAAGF,SAAS,GAAGE,GAAxB;AAEA,QAAMC,QAAQ,GAAGJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACJ,GAAL,KAAaA,GAA1C,CAAjB;AAEA,sBACE;AAAA,4BACE;AAAA,yBAASA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,6BACE;AAAA,kBACGC,QAAQ,CAACI,GAAT,CAAcD,IAAD,iBACZ;AAAA,kCACE;AAAA,sBAAKA,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAASH,IAAI,CAACI,EAAd;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAeD;;GApBuBT,G;UACVD,S;;;KADUC,G","sourcesContent":["import dummy from \"../db/data.json\";\nimport { useParams } from \"react-router\";\n\nexport default function Day() {\n  const day = useParams().day;\n\n  const wordList = dummy.words.filter((word) => word.day === day);\n\n  return (\n    <>\n      <h2>Day {day}</h2>\n      <table>\n        <tbody>\n          {wordList.map((word) => (\n            <tr key={word.id}>\n              <td>{word.eng}</td>\n              <td>{word.kor}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}